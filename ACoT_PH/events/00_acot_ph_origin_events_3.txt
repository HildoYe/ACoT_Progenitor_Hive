namespace = origin

#On Colonize and transfer missing offspring modifier
planet_event = {
	id = origin.3225
	hide_window = yes

	is_triggered_only = yes

	trigger = {
		owner = { has_origin = origin_progenitor_hive }
		NOR = {
			num_assigned_jobs = {
				job = offspring_drone
				value >= 1
			}
			num_assigned_jobs = {
				job = acot_offspring
				value >= 1
			}
		}
	}

	immediate = {
		if = {
			limit = {
				NOT = { has_modifier = missing_offspring_modifier }
			}
			add_modifier = {
				modifier = missing_offspring_modifier
				days = -1
			}
		}
	}
}

#Monthly check to add and remove missing offspring modifier
country_event = {
	id = origin.3230
	hide_window = yes

	is_triggered_only = yes

	trigger = {
		owner = { has_origin = origin_progenitor_hive }
	}

	immediate = {
		every_owned_planet = {
			limit = {
				NOR = {
					has_modifier = missing_offspring_modifier
					num_assigned_jobs = {
						job = offspring_drone
						value >= 1
					}
					num_assigned_jobs = {
						job = acot_offspring
						value >= 1
					}
				}
			}
			add_modifier = {
				modifier = missing_offspring_modifier
				days = -1
			}
		}
		every_owned_planet = {
			limit = {
				has_modifier = missing_offspring_modifier
				OR = {
					num_assigned_jobs = {
						job = offspring_drone
						value >= 1
					}
					num_assigned_jobs = {
						job = acot_offspring
						value >= 1
					}
					has_deposit = d_progenitor
				}

			}
			remove_modifier = "missing_offspring_modifier"
		}
	}
}

# This = owner of ship 1 (destroyed)
# From = owner of ship 2 (combatant)
# FromFrom = ship 1
# FromFromFrom = ship 2
country_event = {
	id = origin.3260
	hide_window = yes

	is_triggered_only = yes

	trigger = {
		has_origin = origin_progenitor_hive
		fromfrom = {
			OR = {
				has_component = SHIP_AURA_OFFSPRING
				has_component = SHIP_AURA_OFFSPRING_PRECURSOR
			}
			solar_system = {
				NOT = {
					any_ship_in_system = {
						NOT = {
							is_same_value = fromfrom
						}
						is_owned_by = root
						OR = {
							has_component = SHIP_AURA_OFFSPRING
							has_component = SHIP_AURA_OFFSPRING_PRECURSOR
						}
					}
				}
			}
		}
	}

	immediate = {
		create_message = {
			type = MESSAGE_FINAL_OFFSPRING_SHIP
			localization = MESSAGE_FINAL_OFFSPRING_SHIP_DESC
			days = 30
			target = fromfrom.solar_system
			variable = {
				type = name
				localization = SYSTEM
				scope = fromfrom.solar_system
			}
		}
	}
}
